"use strict";(()=>{var e={};e.id=504,e.ids=[504],e.modules={1185:e=>{e.exports=require("mongoose")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},9533:(e,t,a)=>{a.r(t),a.d(t,{config:()=>m,default:()=>u,routeModule:()=>h});var r={};a.r(r),a.d(r,{default:()=>handler});var s=a(1802),n=a(7153),o=a(6249),c=a(1924),i=a(1185),d=a.n(i);let l=new(d()).Schema({customerId:{type:d().Schema.Types.ObjectId,ref:"Customer",required:!0},washerId:{type:d().Schema.Types.ObjectId,ref:"Washer",required:!0},scheduledDate:{type:Date,required:!0},status:{type:String,enum:["scheduled","in-progress","completed","cancelled"],default:"scheduled"},carType:{type:String,default:"Sedan"},carNumber:{type:String},specialInstructions:{type:String},washType:{type:String,enum:["basic","premium","deluxe"],default:"basic"},price:{type:Number,default:299},washPhotos:[{type:String}],customerFeedback:{type:String},rating:{type:Number,min:1,max:5},startTime:{type:Date},endTime:{type:Date},createdAt:{type:Date,default:Date.now},completedAt:{type:Date}}),p=d().models.Appointment||d().model("Appointment",l);async function handler(e,t){await (0,c.Z)();let{method:a}=e;switch(a){case"GET":try{let e=await p.find({}).populate("customerId","name mobile address").populate("washerId","name mobile assignedArea").sort({scheduledDate:-1});t.status(200).json({success:!0,data:e})}catch(e){console.error("GET appointments error:",e),t.status(400).json({success:!1,error:e.message})}break;case"POST":try{let a=await p.create(e.body);t.status(201).json({success:!0,data:a})}catch(e){console.error("POST appointment error:",e),t.status(400).json({success:!1,error:e.message})}break;default:t.status(405).json({success:!1,error:"Method not allowed"})}}let u=(0,o.l)(r,"default"),m=(0,o.l)(r,"config"),h=new s.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/appointments",pathname:"/api/appointments",bundlePath:"",filename:""},userland:r})},1924:(e,t,a)=>{a.d(t,{Z:()=>c});var r=a(1185),s=a.n(r);let n=process.env.MONGODB_URI||"mongodb://localhost:27017/washify";if(!n)throw Error("Please define the MONGODB_URI environment variable");let o=global.mongoose;async function dbConnect(){if(o.conn)return o.conn;o.promise||(o.promise=s().connect(n,{bufferCommands:!1}).then(e=>e));try{o.conn=await o.promise}catch(e){throw o.promise=null,e}return o.conn}o||(o=global.mongoose={conn:null,promise:null});let c=dbConnect}};var t=require("../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),a=t.X(0,[222],()=>__webpack_exec__(9533));module.exports=a})();